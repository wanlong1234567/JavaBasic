回顾:
1.Linux:
    开源的操作系统、免费、服务器
	目录、挂载点、安全级别高
	pwd,ls,cd 绝对路径:相对于根目录的位置，以/开头
	          相对路径:相对于当前目录的位置
			    .:当前目录  ..:上一级目录
2.Java开发环境:
  1)java编译运行过程:
    1.1)编译期:.java，经过编译，生成.class字节码文件
	1.2)运行期:JVM加载.class并运行.class
	跨平台，一次编程到处使用
  2)名词:
    2.1)JVM:java虚拟机
	2.2)JRE:java运行环境 JRE=JVM+java系统类库
	2.3)JDK:java开发工具包 JDK=JRE+编译、运行等工具
  3)配置环境变量:了解
3.eclipse:
   IBM、开源的、免费的、只需解压即可
   System.out.println("HelloWorld");






笔记:
1.变量:存数的
  1)声明:
      int a; //声明一个整型的变量，名为a
      int b,c,d; //声明三个整型的变量，名为b,c,d
  2)命名:
    2.1)只能包含字母、数字、_和$符，
	    并且不能以数字开头
	2.2)严格区分大小写
	2.3)不能使用关键字
	2.4)可以中文命名，但不建议
        建议"英文的见名知意"、"驼峰命名法"
  3)初始化:第一次赋值
    3.1)声明的同时初始化:
	      int a = 5; //声明整型变量a并赋值为5
	3.2)先声明后初始化:
          int a; //声明整型变量a
		  a = 5; //给变量a赋值为5
  4)使用:
    4.1)对变量的使用就是对它所存的那个数的使用
	      int a = 5;
		  int b = a+10; //取出a的值5，加10后，再赋值给整型变量b
		  System.out.println(b);   //输出变量b的值15
		  System.out.println("b"); //b，双引号中的原样输出
		  a = a+10; //取出a的值5，加10后，再赋值给a
		            //在a本身基础之上增10
	4.2)变量的使用必须与数据类型匹配
	      int a = 3.14; //编译错误，数据类型不匹配
	4.3)变量在使用之前必须声明并初始化
	      System.out.println(m); //编译错误，m未声明
		  int m;
		  System.out.println(m); //编译错误，m未初始化
2.基本数据类型:
  1)int:整型，4个字节，-21个多亿到21个多亿
    1.1)整数直接量默认为int型，但不能超范围，超范围则编译错误
	1.2)两个整数相除，结果还是整数，小数位无条件舍弃
	1.3)运算时超范围，会发生溢出，溢出是需要避免的
  2)long:长整型，8个字节
    2.1)长整型直接量需要数字后加L或l
	2.2)较大数的运算时，为了避免溢出，建议在第1个数字后加L
	2.3)System.currentTimeMillis()用于获取自
	    1970.1.1零时到此时此刻的毫秒数
  3)double:浮点型，8个字节
    3.1)浮点数直接量默认double型，若想表示float需在数字后加F或f
	3.2)double型数据在参与运算时，有可能会出现舍入误差
  4)char:字符型，2个字节
    4.1)采用Unicode编码格式，一个字符对应一个码
	    表现的形式是字符char，但实质上是码int(0到65535之间)
		ASCII码('a'--97  'A'--65  '0'--48)
	4.2)字符必须放在单引号中，只能有一个
	4.3)特殊字符需通过\转义
  5)boolean:布尔型，1个字节
    5.1)只能存储true和false
3.基本数据类型间的转换:
    基本类型从小到大依次为:
	   byte,short,int,long,float,double
	         char
  1)两种方式:
    1.1)自动类型转换:小类型到大类型
	1.2)强制类型转换:大类型到小类型
	      语法: (要转换成为的数据类型)变量
		        强转有可能会溢出或精度丢失
  2)两点规则:
    2.1)整数直接量可以直接赋值给byte,short,char，
        但不能超出范围
	2.2)byte,short,char型数据参与运算时，
	    先一律转换为int再运算
4.Scanner的用法:
  1)在package的下面:
      import java.util.Scanner;
  2)在main方法中:
      Scanner scan = new Scanner(System.in);
  3)在第2步之下:
      System.out.println("请输入年龄:");
      int age = scan.nextInt();
      System.out.println("请输入价格:");
	  double price = scan.nextDouble();

